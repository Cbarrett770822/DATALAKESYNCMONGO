// Receipt MongoDB Schema
const mongoose = require('mongoose');

// Define the schema based on the receipt data structure
const receiptSchema = new mongoose.Schema({
  SERIALKEY: { type: String, required: true, index: true },
  WHSEID: { type: String, required: true, index: true },
  RECEIPTKEY: { type: String, required: true, index: true },
  STORERKEY: { type: String, index: true },
  EXTERNRECEIPTKEY: String,
  TYPE: String,
  NOTES: String,
  SUSR1: String,
  SUSR2: String,
  SUSR3: String,
  SUSR4: String,
  SUSR5: String,
  RECEIPTDATE: Date,
  STATUS: { type: String, index: true },
  STATUSDATE: Date,
  POKEY: String,
  OTHERREFERENCE: String,
  SUPPLIERREFERENCE: String,
  CARRIERNAME: String,
  CARRIERNAME2: String,
  CARRIERADDRESS1: String,
  CARRIERADDRESS2: String,
  CARRIERADDRESS3: String,
  CARRIERCITY: String,
  CARRIERSTATE: String,
  CARRIERZIP: String,
  CARRIERPHONE: String,
  CARRIERCONTACT: String,
  DRIVERNAME: String,
  TRAILERNUMBER: String,
  TRAILEROWNER: String,
  TRAILERTYPE: String,
  DOOR: String,
  SCHEDULEDARRIVALDATE: Date,
  ACTUALARRIVALDATE: Date,
  CLOSEDDATE: Date,
  ADDDATE: Date,
  ADDWHO: String,
  EDITDATE: Date,
  EDITWHO: String,
  SUPPLIERCODE: String,
  SUPPLIERNAME: String,
  CARRIERCOUNTRY: String,
  CARRIEREMAIL: String,
  SUPPLIERADDRESS1: String,
  SUPPLIERADDRESS2: String,
  SUPPLIERADDRESS3: String,
  SUPPLIERCITY: String,
  SUPPLIERSTATE: String,
  SUPPLIERZIP: String,
  SUPPLIERCOUNTRY: String,
  SUPPLIERPHONE: String,
  SUPPLIERCONTACT: String,
  SUPPLIEREMAIL: String,
  TRANSPORTATIONMODE: String,
  TRANSPORTATIONSERVICE: String,
  EXTERNALRECEIPTKEY2: String,
  INTERMODALVEHICLE: String,
  LOADID: String,
  SEAL: String,
  SEAL2: String,
  BOLFLAG: String,
  BOLNUMBER: String,
  BOLREFERENCE: String,
  BOLTYPE: String,
  COMMENTS: String,
  EFFECTIVEDATE: Date,
  SHIPFROMADDRESS1: String,
  SHIPFROMADDRESS2: String,
  SHIPFROMADDRESS3: String,
  SHIPFROMCITY: String,
  SHIPFROMSTATE: String,
  SHIPFROMZIP: String,
  SHIPFROMCOUNTRY: String,
  SHIPFROMNAME: String,
  SHIPFROMPHONE: String,
  SHIPFROMCONTACT: String,
  SHIPFROMEMAIL: String,
  SHIPFROMKEY: String,
  SHIPFROMTYPE: String,
  SHIPTOADDRESS1: String,
  SHIPTOADDRESS2: String,
  SHIPTOADDRESS3: String,
  SHIPTOCITY: String,
  SHIPTOSTATE: String,
  SHIPTOZIP: String,
  SHIPTOCOUNTRY: String,
  SHIPTONAME: String,
  SHIPTOPHONE: String,
  SHIPTOCONTACT: String,
  SHIPTOEMAIL: String,
  SHIPTOKEY: String,
  SHIPTOTYPE: String,
  BILLTOADDRESS1: String,
  BILLTOADDRESS2: String,
  BILLTOADDRESS3: String,
  BILLTOCITY: String,
  BILLTOSTATE: String,
  BILLTOZIP: String,
  BILLTOCOUNTRY: String,
  BILLTONAME: String,
  BILLTOPHONE: String,
  BILLTOCONTACT: String,
  BILLTOEMAIL: String,
  BILLTOKEY: String,
  BILLTOTYPE: String,
  RETURNTOADDRESS1: String,
  RETURNTOADDRESS2: String,
  RETURNTOADDRESS3: String,
  RETURNTOCITY: String,
  RETURNTOSTATE: String,
  RETURNTOZIP: String,
  RETURNTOCOUNTRY: String,
  RETURNTONAME: String,
  RETURNTOPHONE: String,
  RETURNTOCONTACT: String,
  RETURNTOEMAIL: String,
  RETURNTOKEY: String,
  RETURNTOTYPE: String,
  TOTALCUBIC: Number,
  TOTALGROSS: Number,
  TOTALNET: Number,
  TOTALCASES: Number,
  TOTALPALLETS: Number,
  TOTALVALUE: Number,
  TOTALLINES: Number,
  TOTALUNITS: Number,
  TOTALWEIGHT: Number,
  TOTALCASEWEIGHT: Number,
  TOTALCUBE: Number,
  TOTALCASECUBE: Number,
  TOTALCASEVOLUME: Number,
  TOTALVOLUME: Number,
  TOTALCASEHEIGHT: Number,
  TOTALCASEWIDTH: Number,
  TOTALCASELENGTH: Number,
  TOTALHEIGHT: Number,
  TOTALWIDTH: Number,
  TOTALLENGTH: Number,
  TOTALAREA: Number,
  TOTALCASEAREA: Number,
  TOTALCASECOUNT: Number,
  TOTALCOUNT: Number,
  TOTALCASEQTY: Number,
  TOTALQTY: Number,
  TOTALCASEWEIGHT2: Number,
  TOTALWEIGHT2: Number,
  TOTALCASECUBE2: Number,
  TOTALCUBE2: Number,
  TOTALCASEVOLUME2: Number,
  TOTALVOLUME2: Number,
  TOTALCASEHEIGHT2: Number,
  TOTALCASEWIDTH2: Number,
  TOTALCASELENGTH2: Number,
  TOTALHEIGHT2: Number,
  TOTALWIDTH2: Number,
  TOTALLENGTH2: Number,
  TOTALAREA2: Number,
  TOTALCASEAREA2: Number,
  TOTALCASECOUNT2: Number,
  TOTALCOUNT2: Number,
  TOTALCASEQTY2: Number,
  TOTALQTY2: Number,
  TOTALCASEWEIGHT3: Number,
  TOTALWEIGHT3: Number,
  TOTALCASECUBE3: Number,
  TOTALCUBE3: Number,
  TOTALCASEVOLUME3: Number,
  TOTALVOLUME3: Number,
  TOTALCASEHEIGHT3: Number,
  TOTALCASEWIDTH3: Number,
  TOTALCASELENGTH3: Number,
  TOTALHEIGHT3: Number,
  TOTALWIDTH3: Number,
  TOTALLENGTH3: Number,
  TOTALAREA3: Number,
  TOTALCASEAREA3: Number,
  TOTALCASECOUNT3: Number,
  TOTALCOUNT3: Number,
  TOTALCASEQTY3: Number,
  TOTALQTY3: Number,
  EXT_UDF_STR1: String,
  EXT_UDF_STR2: String,
  EXT_UDF_STR3: String,
  EXT_UDF_STR4: String,
  EXT_UDF_STR5: String,
  EXT_UDF_DATE1: Date,
  EXT_UDF_DATE2: Date,
  EXT_UDF_DATE3: Date,
  EXT_UDF_DATE4: Date,
  EXT_UDF_DATE5: Date,
  EXT_UDF_FLOAT1: Number,
  EXT_UDF_FLOAT2: Number,
  EXT_UDF_FLOAT3: Number,
  EXT_UDF_FLOAT4: Number,
  EXT_UDF_FLOAT5: Number,
  SCHEMA_REFERENCE: String,
  // Add metadata for sync tracking
  _syncDate: { type: Date, default: Date.now },
  _syncStatus: { type: String, default: 'synced' }
}, {
  // Enable timestamps
  timestamps: true,
  // Disable version key
  versionKey: false
});

// Create a compound index for efficient lookups
receiptSchema.index({ WHSEID: 1, RECEIPTKEY: 1 }, { unique: true });

// Create a model from the schema
const Receipt = mongoose.models.Receipt || mongoose.model('Receipt', receiptSchema);

module.exports = Receipt;
